{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "defaultValue": "canadacentral"
        },
        "networkInterfaceName": {
            "type": "String",
            "defaultValue": "win-arctest01453"
        },
        "enableAcceleratedNetworking": {
            "type": "Bool",
            "defaultValue": true
        },
        "networkSecurityGroupName": {
            "type": "String",
            "defaultValue": "win-Arctest01-nsg"
        },
        "subnetName": {
            "type": "String",
            "defaultValue": "default"
        },
        "virtualNetworkName": {
            "type": "String",
            "defaultValue": "win-Arctest01-vnet"
        },
        "addressPrefixes": {
            "type": "Array",
            "defaultValue": [
                "10.0.0.0/16"
            ]
        },
        "subnetAddressPrefix": {
            "type": "String",
            "defaultValue": "10.0.0.0/24"
        },
        "publicIpAddressName": {
            "type": "String",
            "defaultValue": "win-Arctest01-ip"
        },
        "publicIpAddressType": {
            "type": "String",
            "defaultValue": "Static"
        },
        "publicIpAddressSku": {
            "type": "String",
            "defaultValue": "Standard"
        },
        "pipDeleteOption": {
            "type": "String",
            "defaultValue": "Detach"
        },
        "virtualMachineName": {
            "type": "String",
            "defaultValue": "win-Arctest01"
        },
        "virtualMachineComputerName": {
            "type": "String",
            "defaultValue": "win-Arctest01"
        },
        "virtualMachineRG": {
            "type": "String",
            "defaultValue": "ArcVMTestrg"
        },
        "osDiskType": {
            "type": "String",
            "defaultValue": "Premium_LRS"
        },
        "OSVersion": {
        "type": "string",
        "defaultValue": "2022-datacenter-azure-edition",
        "allowedValues": [
            "2016-datacenter-gensecond",
            "2016-datacenter-server-core-g2",
            "2016-datacenter-server-core-smalldisk-g2",
            "2016-datacenter-smalldisk-g2",
            "2016-datacenter-with-containers-g2",
            "2016-datacenter-zhcn-g2",
            "2019-datacenter-core-g2",
            "2019-datacenter-core-smalldisk-g2",
            "2019-datacenter-core-with-containers-g2",
            "2019-datacenter-core-with-containers-smalldisk-g2",
            "2019-datacenter-gensecond",
            "2019-datacenter-smalldisk-g2",
            "2019-datacenter-with-containers-g2",
            "2019-datacenter-with-containers-smalldisk-g2",
            "2019-datacenter-zhcn-g2",
            "2022-datacenter-azure-edition",
            "2022-datacenter-azure-edition-core",
            "2022-datacenter-azure-edition-core-smalldisk",
            "2022-datacenter-azure-edition-smalldisk",
            "2022-datacenter-core-g2",
            "2022-datacenter-core-smalldisk-g2",
            "2022-datacenter-g2",
            "2022-datacenter-smalldisk-g2",
            "2012-Datacenter",
            "2012-R2-Datacenter",
            "2016-Datacenter",
            "2019-Datacenter",
            "2022-datacenter",
	    "2025-datacenter"

        ],
        "metadata": {
            "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "osDiskDeleteOption": {
            "type": "String",
            "defaultValue": "Delete"
        },
        "virtualMachineSize": {
            "type": "String",
            "defaultValue": "Standard_D2s_v3"
        },
        "nicDeleteOption": {
            "type": "String",
            "defaultValue": "Detach"
        },
        "hibernationEnabled": {
            "type": "Bool",
            "defaultValue": false
        },
        "adminUsername": {
            "type": "String",
            "defaultValue": "testuser"
        },
        "adminPassword": {
            "type": "SecureString",
            "defaultValue": "[newGuid()]"
        },
        "patchMode": {
            "type": "String",
            "defaultValue": "AutomaticByOS"
        },
        "enableHotpatching": {
            "type": "Bool",
            "defaultValue": false
        },
        "identityName": {
            "type": "String",
            "defaultValue": "win-arctest01453"
        },
        "identityLocation": {
            "type": "String",
            "defaultValue": "canadacentral"
        },
        "roleNameGuid": {
            "type": "String",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "A GUID used to identify the role assignment. Do not use newGuid() function for this value, generate a guid and use that value. Creating a newGuid() for the same role assignment each time will fail the ARM template."
            }
        },
        "builtInRoleType": {
            "type": "string",
            "allowedValues": [
                "Owner",
                "ArcAdmin",
                "Contributor",
                "Reader"
            ],
            "defaultValue": "Owner",
            "metadata": {
                "description": "Built-in role to assign"
            }
        },
        "cloudEnv": {
            "defaultValue": "AzureCloud",
            "allowedValues": [
                "AzureCloud",
                "AzureUSGovernment"
            ],
            "type": "String",
            "metadata": {
                "description": "Set to AzureCloud if running in Public cloud or to AzureUSGovernment if running in Fairfax"
            }
        }
    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetName": "[parameters('virtualNetworkName')]",
        "principalId": "Testing",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b824bff0-7237-4969-b838-c4e495736c14')]",
        "ArcAdmin": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'cd570a14-e51a-42ad-bac8-bafd67325302')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "AzureServiceDeployReleaseManagementContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '21d96096-b162-414a-8302-d8354f9d91b2')]"   
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-01-31",
            "name": "[parameters('identityName')]",
            "location": "[parameters('identityLocation')]"
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "kind": "AzurePowerShell",
            "name": "WaitSection",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName'))]"
                  ],
            "properties": {
              "azPowerShellVersion": "3.0",
              "scriptContent": "start-sleep -Seconds 30",
              "cleanupPreference": "Always",
              "retentionInterval": "PT1H"
            }
          },
        {
          "type": "Microsoft.Authorization/roleAssignments",
          "apiVersion": "2018-09-01-preview",
          "name": "[parameters('roleNameGuid')]",
          "properties": {
              "roleDefinitionId": "[variables(parameters('builtInRoleType'))]",
              "principalId": "[reference(resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31', 'Full').Properties.principalId]"
          },
          "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', 'WaitSection')]",
                "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]",
                                "properties": {
                                    "deleteOption": "[parameters('pipDeleteOption')]"
                                }
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
	                {
	                    "name": "SSH",
	                    "properties": {
	                        "priority": 300,
	                        "protocol": "TCP",
	                        "access": "Allow",
	                        "direction": "Inbound",
	                        "sourceAddressPrefix": "*",
	                        "sourcePortRange": "*",
	                        "destinationAddressPrefix": "*",
	                        "destinationPortRange": "22"
	                    }
	                },
	                {
	                    "name": "HTTPS",
	                    "properties": {
	                        "priority": 320,
	                        "protocol": "TCP",
	                        "access": "Allow",
	                        "direction": "Inbound",
	                        "sourceAddressPrefix": "*",
	                        "sourcePortRange": "*",
	                        "destinationAddressPrefix": "*",
	                        "destinationPortRange": "443"
	                    }
	                },
	                {
	                    "name": "HTTP",
	                    "properties": {
	                        "priority": 340,
	                        "protocol": "TCP",
	                        "access": "Allow",
	                        "direction": "Inbound",
	                        "sourceAddressPrefix": "*",
	                        "sourcePortRange": "*",
	                        "destinationAddressPrefix": "*",
	                        "destinationPortRange": "80"
	                    }
	                },
	                {
	                    "name": "RDP",
	                    "properties": {
	                        "priority": 360,
	                        "protocol": "TCP",
	                        "access": "Allow",
	                        "direction": "Inbound",
	                        "sourceAddressPrefix": "*",
	                        "sourcePortRange": "*",
	                        "destinationAddressPrefix": "*",
	                        "destinationPortRange": "3389"
	                    }
	                }
            	]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": [
					{
						"name": "default",
						"properties": {
							"addressPrefix": "[parameters('subnetAddressPrefix')]",
							"networkSecurityGroup": {
								"id": "[variables('nsgId')]"
							}
						}
					}
				]
            },
			"dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[parameters('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "identity": 
            {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]":{}
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
                "[concat('Microsoft.Authorization/roleAssignments/', parameters('roleNameGuid'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('OSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "securityProfile": {},
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": "[parameters('enableHotpatching')]",
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "name": "CSEDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "variables": {
                        "principalId": "[reference(resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31', 'Full').Properties.principalId]"  
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "kind": "AzurePowerShell",
                            "name": "InnerWaitSection",
                            "location": "[parameters('location')]",
                            "properties": {
                              "azPowerShellVersion": "3.0",
                              "scriptContent": "start-sleep -Seconds 30",
                              "cleanupPreference": "Always",
                              "retentionInterval": "PT1H"
                            }
                          },
                        {
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2021-04-01",
                            "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'InstallArc')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Resources/deploymentScripts', 'InnerWaitSection')]"
                            ],
                            "properties": {
                              "publisher": "Microsoft.Compute",
                              "type": "CustomScriptExtension",
                              "typeHandlerVersion": "1.7",
                              "autoUpgradeMinorVersion": true,
                              "settings": {
                                "fileUris": [
                                  "https://raw.githubusercontent.com/nitinbps/ArcforServerSamples/refs/heads/main/InstallArcForServerWithToken.ps1"
                                ],
                                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File InstallArcForServerWithToken.ps1 -principalId ', reference(resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31', 'Full').Properties.principalId)]"
                              }
                            }
                          }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}
